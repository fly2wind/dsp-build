<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2022 [name of copyright owner]
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sample</groupId>
    <artifactId>dsp-build</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>DSP</name>
    <description>DSP build project, managing parent、dependencies、plugins、tools for projects</description>

    <modules>
        <module>dsp-parent</module>
        <module>dsp-dependencies</module>
        <module>dsp-build-core</module>
        <module>dsp-build-plugin</module>
        <module>dsp-build-rule</module>
        <module>dsp-build-extension</module>
        <module>dsp-build-tool</module>
    </modules>

    <properties>
        <revision>${project.version}</revision>

        <!-- 公共属性配置 -->
        <encoding>UTF-8</encoding>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.sourceEncoding>${encoding}</project.reporting.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- 依赖版本定义 -->
        <maven.version>3.5.4</maven.version>
        <maven.enforcer.version>3.1.0</maven.enforcer.version>
        <maven.resolver.version>1.1.1</maven.resolver.version>
        <eclipse.aether.version>1.1.0</eclipse.aether.version>
        <lombok.version>1.18.24</lombok.version>

        <!-- 插件版本定义 -->
        <maven.flatten.plugin.version>1.3.0</maven.flatten.plugin.version>
        <maven.compiler.plugin.version>3.10.1</maven.compiler.plugin.version>
        <maven.sisu.plugin.version>0.9.0.M1</maven.sisu.plugin.version>
        <maven.shade.plugin.version>3.3.0</maven.shade.plugin.version>
        <maven.invoker.plugin.version>3.3.0</maven.invoker.plugin.version>
        <maven.mrm.plugin.version>1.4.1</maven.mrm.plugin.version>

        <!-- 镜像版本定义 -->
        <offering>Digital Service Platform</offering>
        <CMCVersion>23.1.RC1.B002</CMCVersion>
        <DSPVersion>23.1.RC1.B002</DSPVersion>
        <ITAuxVersion>V100R002C06SPC200B002</ITAuxVersion>
        <ITInfraVersion>V100R002C06SPC200B002</ITInfraVersion>

    </properties>

    <distributionManagement>
        <repository>
            <id>gtscloud-releases</id>
            <url>https://sample.com/artifactory/product_maven/</url>
        </repository>
        <snapshotRepository>
            <id>gtscloud-releases</id>
            <url>https://sample.com/artifactory/product_maven/</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencyManagement>
        <dependencies>
            <!-- maven -->
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven</artifactId>
                <version>${maven.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.enforcer</groupId>
                <artifactId>enforcer-api</artifactId>
                <version>${maven.enforcer.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- maven resolver -->
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-api</artifactId>
                <version>${eclipse.aether.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-spi</artifactId>
                <version>${eclipse.aether.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-connector-basic</artifactId>
                <version>${eclipse.aether.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-impl</artifactId>
                <version>${eclipse.aether.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-transport-file</artifactId>
                <version>${eclipse.aether.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-transport-http</artifactId>
                <version>${eclipse.aether.version}</version>
            </dependency>
            <!-- commons -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.2</version>
            </dependency>
            <dependency>
                <groupId>commons-digester</groupId>
                <artifactId>commons-digester</artifactId>
                <version>1.8</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.15</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.10.0</version>
            </dependency>
            <!--http -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>4.4.15</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.13</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.sisu</groupId>
                    <artifactId>sisu-maven-plugin</artifactId>
                    <version>${maven.sisu.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven.shade.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>${maven.invoker.plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>install</goal>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <projectsDirectory>src/it/projects</projectsDirectory>
                                <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
                                <settingsFile>src/it/mrm/settings.xml</settingsFile>
                                <preBuildHookScript>setup</preBuildHookScript>
                                <postBuildHookScript>verify</postBuildHookScript>
                                <streamLogs>true</streamLogs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>mrm-maven-plugin</artifactId>
                    <version>${maven.mrm.plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>start</goal>
                                <goal>stop</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <repositories>
                            <mockRepo>
                                <source>src/it/mrm/repository</source>
                            </mockRepo>
                            <localRepo>
                                <source>${project.build.directory}/local-repo</source>
                            </localRepo>
                            <proxyRepo/>
                        </repositories>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.1.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${session.executionRootDirectory}/env.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/.build</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>.cloudbuild</directory>
                                    <includes>
                                        <include>**/*.xml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven.flatten.plugin.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <updatePomFile>true</updatePomFile>
                            <flattenMode>bom</flattenMode>
                            <pomElements>
                                <properties>interpolate</properties>
                                <dependencyManagement>resolve</dependencyManagement>
                                <pluginManagement>keep</pluginManagement>
                                <profiles></profiles>
                            </pomElements>
                        </configuration>
                    </execution>
                    <execution>
                        <id>flatten-clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
